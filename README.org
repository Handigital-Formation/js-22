#+title: Javascript
#+author: Handigital
* Généralités
** Documentation
[[https://developer.mozilla.org/fr/docs/Web/JavaScript][Liens vers la documentation MDN]]
** Afficher un message dans la console
#+begin_src js
  console.log('Bonjour');
#+end_src
** Déclaration d'une variable
#+begin_src js
  let maVar = 'Hello';
#+end_src

* Types
** Primitifs
- String // "Regardez cette chaîne" -> String = Texte
- Boolean // true, false
- Number // 1,2,3,4
- Null // rien, nada
- Undefined // valeur qui n'a pas été initialisée
** Objets
-> Si ce n'est pas un type primitif, alors c'est un objet

* Comparaison
** Primitifs, c'est similaire à des maths
#+begin_src javascript
  'flo' === 'flo' // true
  'flo' === 1 // false
   1 === 2 // false
  true === true //true
  true === false // false
  false === false // true
  undefined === undefined // true
  null === null // true
#+end_src

** Objet
#+begin_src javascript
  {} === {} // false
  let maisonA = {}
  maisonA === maisonA // true
  maisonA === {} // false
  let maisonB = {}
  maisonA === maisonB // false
#+end_src

* Les tableaux

#+begin_src javascript
  let todos = [];
  // Ajouter
  todos.push('truc');
  // Modifier
  todos[0] = 'new truc';
  // Supprimer
  ['toto', 'tutu', 'tata','titi']
  todos.splice(1,2); //  ['toto','titi']
#+end_src

* Les objets

#+begin_src javascript
  let maVoiture = {
    marque: "Peugeot", // Attribut
    couleur: "Grise",
    sayCouleur: function() { // Méthode
      console.log("Bonjour, je suis "+this.couleur);
    }
   }
  
    maVoiture.marque; // "Peugeot"
    maVoiture.sayCouleur(); // Bonjour, je suis Grise
#+end_src

#+begin_src javascript
  let maVoiture1 = {couleur: 'jaune'};
  let maVoiture2 = maVoiture1;
  maVoiture2.couleur = 'rouge';
#+end_src

maVoiture1 adresse mémoire 1 ===> {couleur:’jaune’’}

maVoiture2 adresse mémoire 1 ===^

 

maVoiture1 adresse mémoire 1 ===> {couleur:’rouge’’}

maVoiture2 adresse mémoire 1 ===^


* Fonctions

#+begin_src javascript
  // Exemple de fonction sans paramètre
  function displayTodos(){
    console.log('Mes Todos: ',todos);
  }
  // Exemple de fonction avec paramètre
  function addTodo(item){
    todos.push(item);
    displayTodos();
  }
  // Exemple de fonction avec valeur de retour
  function multiply(x,y){
    return x*y;
  }
  
  // Appel à la fonction
  let result = multiply(3,4);
  console.log(result);
#+end_src

- Une fonctions en paramètre d'une autre fonction est une =fonction de rappel ou callback function=
- Une fonction qui prend une fonction en paramètre est une =fonction d'ordre supérieur ou high order function=

* Conditions

#+begin_src javascript
  if (this.todos[i].completed) {
    console.log("(x) ", this.todos[i].texte);
  } else {
    console.log("( ) ", this.todos[i].texte);
  }
#+end_src

* Manipulation du dom
DOM = Document Object Model

** Récupération élément
#+begin_src html
<div id="monDiv">test</div>
#+end_src
#+begin_src javascript
let el = document.getElementById('monDiv');
#+end_src
** Création d'élément
#+begin_src javascript
let el = document.createElement('li');
#+end_src
** Ajout / Modification d'élément
#+begin_src javascript
  todoUl.innerHTML = '';
  todos.appendChild(todoLi);
#+end_src
#+begin_src html
  <ul>
    <li></li>
  </ul>
#+end_src

* Évenements
#+begin_src javascript
  todoUl.addEventListener('click',function(event){
    console.log(event.target);
  });
#+end_src
